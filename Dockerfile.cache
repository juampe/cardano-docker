# syntax=docker/dockerfile:1.2
ARG TARGETARCH
ARG UBUNTU="ubuntu:hirsute"
FROM ${UBUNTU}-${TARGETARCH} as builder

ARG DEBIAN_FRONTEND="noninteractive"
ARG TARGETARCH
ARG CARDANO_VERSION=1.26.2
ARG JOBS="-j1"

COPY repo/cardano-${TARGETARCH}-${CARDANO_VERSION}.tgz /cardano.tgz
RUN apt-get -y update && apt-get -y upgrade && apt-get -y install --no-install-recommends bash curl jq miniupnpc iproute2 wget ca-certificates bc tcptraceroute netbase libnuma1  && apt-get -y clean
RUN cd / && tar -xvzf /cardano.tgz && rm /cardano.tgz && LD_LIBRARY_PATH=/usr/local/lib cardano-cli --version && LD_LIBRARY_PATH=/usr/local/lib cardano-node --version
RUN adduser --disabled-password --gecos "cardano" --uid 1001 cardano
COPY scripts/ /scripts/

#Runtime variables to init.sh
ENV LD_LIBRARY_PATH=/usr/local/lib \
  NODE_NETWORK="mainnet" \
  NODE_IP="" \
  NODE_LISTEN="0.0.0.0" \
  NODE_PORT="6000" \
  NODE_UPNP=false \
  NODE_RUNAS_CORE=false \
  NODE_HOME="/home/cardano/cnode" \
  NODE_CONFIG="/home/cardano/cnode/config/mainnet-config.json" \
  NODE_TOPOLOGY="/home/cardano/cnode/config/mainnet-topology.json" \
  NODE_SHELLEY_KES_KEY="/home/cardano/cnode/keys/pool/kes.skey" \
  NODE_SHELLEY_VRF_KEY="/home/cardano/cnode/keys/pool/vrf.skey" \
  NODE_SHELLEY_OPERATIONAL_CERTIFICATE="/home/cardano/cnode/keys/pool/node.cert" \
  NODE_SCRIPTS=false \
  NODE_CUSTOM_PEERS="" \
  NODE_UPDATE_TOPOLOGY=true \
  NODE_TOPOLOGY_PUSH=false \
  NODE_TOPOLOGY_PULL=false \
  NODE_TOPOLOGY_PULL_MAX=10 \
  NODE_TRACE_FETCH_DECISIONS=true \
  NODE_TRACE_MEMPOOL=false \
  NODE_PROM_LISTEN="" \
  NODE_HEALTH=false \
  NODE_HEALTH_TIMEOUT=180 \
  NODE_HEALTH_CPU_PCT_WARN=90 \
  NODE_HEALTH_CPU_PCT_KILL=95 \
  NODE_LOW_PRIORITY=false \
  NODE_RTS=false \
  NODE_RTS_STATS=false \
  NODE_RTS_OPTS="-N2 --disable-delayed-os-memory-return -I0.3 -Iw600 -A16m -F1.5 -H2500M -T"

HEALTHCHECK --interval=10m --timeout=3m --retries=3 --start-period=20m CMD /scripts/healthCheck.sh || bash -c 'kill -s 2 -1 && (sleep 60; kill -s 9 -1)'

USER cardano

COPY init.sh /
STOPSIGNAL SIGINT
ENTRYPOINT [ "/init.sh" ]

